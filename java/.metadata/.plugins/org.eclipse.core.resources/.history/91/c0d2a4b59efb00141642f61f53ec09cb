import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;
public class OzGameMaxSelect {
	public static void main(String[] args) throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int T = Integer.parseInt(line);
        while(T!=0)
        {
        	String line1 = br.readLine();
            int N = Integer.parseInt(line1);
            ArrayList<Integer> input = new ArrayList<Integer>();
        	String line2 = br.readLine();
        	String[] inputstring = line2.split(" ");
        	for(int i=0;i<N;i++)
        	{
        		input.add(Integer.parseInt(inputstring[i]));
        	}
        	Collections.sort(input);
        	int first_sel=-1,second_sel=-1,third_sel=-1,count=0;
        	while(input.size()>0)
        	{
        		first_sel = FirstSel(input,0,input.size());
        		if(first_sel<1)
        		{
        			second_sel = SecondSel(input,0,input.size());
        			if(second_sel<1)
            		{
            			third_sel = ThirdSel(input,0,input.size());
            			if(third_sel<1)
            			{
            				input.remove(0);
            				count++;
            			}
            			else 
            				{
            				input.remove(third_sel);
            				count++;
            				}
            		}
        			else 
        				{
        				input.remove(second_sel);
        				count++;
        				}
        		}
        		else 
        			{
        			input.remove(first_sel);
        			count++;
        			}
        	}
        	System.out.println(count);
        	T--;
        }
	}
	
	private static int FirstSel(ArrayList<Integer> inp,int start,int end)
	{
		int returnval = -1;
		if (start < end)
		{
		int m = (start+end)/2;
		if((m<m+1) && (m>m-1))
		{
			if((inp.get(m) < inp.get(m+1)) && (inp.get(m) > inp.get(m-1)))
				return m;
			else 
			{
				returnval = FirstSel(inp,start,m-1);
				if(returnval == -1)
				{
					returnval = FirstSel(inp,m+1,end);
				}
			}
		}
		}
		return returnval;
	}
	private static int SecondSel(ArrayList<Integer> inp,int start,int end)
	{
		int returnval = -1;
		if (start < end)
		{
		int m = start + (end - start) / 2;
		if(m<m+1)
		{
		if((inp.get(m) < inp.get(m+1)))
			returnval = m;
		else 
		{
			returnval = FirstSel(inp,start,m-1);
			if(returnval == -1)
			{
				returnval = FirstSel(inp,m+1,end);
			}
		}
		}
		}
		return returnval;
	}
	private static int ThirdSel(ArrayList<Integer> inp,int start,int end)
	{
		int returnval = -1;
		if (start < end)
		{
		int m = start + (end - start) / 2;
		if(m>m-1)
		{
		if((inp.get(m) > inp.get(m-1)))
			returnval = m;
		else 
		{
			returnval = FirstSel(inp,start,m-1);
			if(returnval == -1)
			{
				returnval = FirstSel(inp,m+1,end);
			}
		}
		}
		}
		return returnval;
	}
}
